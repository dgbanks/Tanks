{"version":3,"sources":["webpack:///webpack/bootstrap 12a569a4f62ec865170d","webpack:///./lib/tank.js","webpack:///./lib/bullet.js","webpack:///./lib/explosion.js","webpack:///./lib/Tanks.js","webpack:///./lib/game.js","webpack:///./lib/player_one.js","webpack:///./lib/enemy_tank.js","webpack:///./lib/barrier.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,iBAAiB,GAAG,mBAAmB,QAAQ,aAAa;AACjF;AACA,uBAAuB,aAAa,YAAY,WAAW;AAC3D;AACA,uBAAuB,aAAa,UAAU,WAAW;AACzD;;AAEA,6BAA6B,wBAAwB,EAAE;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,6BAA6B,EAAE;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3GA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC3BA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACnBD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,wBAAwB,iBAAiB,EAAE;;AAE3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACrMA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,iBAAiB,EAAE;;AAE1C;AACA,uBAAuB,0BAA0B,cAAc,GAAG,GAAG;;AAErE;AACA,uBAAuB,8CAA8C,GAAG;;AAExE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvFA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA,sDAAsD,kBAAkB;AACxE;AACA,6BAA6B,0CAA0C;AACvE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4CAA4C,wBAAwB;AACpE;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12a569a4f62ec865170d","const Bullet = require('./bullet');\n\nclass Tank {\n  constructor(game) {\n    this.game = game;\n    this.moveDirection = [0, 0];\n    this.width = 50;\n    this.speed = 1;\n    this.cannonSlope = [0, 0];\n\n    this.bullets = 0;\n  }\n\n  idEnemies() {\n    return this.game.tanks.filter(tank => (\n      tank !== this\n    ));\n  }\n\n  getSides() {\n    return {\n      top: this.pos[1] - (this.width / 2),\n      right: this.pos[0] + (this.width / 2),\n      bottom: this.pos[1] + (this.width / 2),\n      left: this.pos[0] - (this.width / 2)\n    };\n  }\n\n  canMove(direction) {\n    let bool = true;\n    let otherTanks = this.game.tanks.filter(tank => (\n      tank !== this\n    ));\n\n    let obstructions = [].concat(this.game.barriers, otherTanks);\n\n    // up\n    if ((direction[0] === 0) && (direction[1] === -1)) {\n      obstructions.forEach(barrier => {\n        if ((this.sides.top === barrier.sides.bottom) && (\n          (this.sides.left >= barrier.sides.left &&\n          this.sides.left <= barrier.sides.right) ||\n          (this.sides.right >= barrier.sides.left &&\n          this.sides.right <= barrier.sides.right) ||\n          (this.pos[0] >= barrier.sides.left &&\n          this.pos[0] <= barrier.sides.right))) {\n            bool = false;\n          }\n      });\n    }\n\n    // down\n    if ((direction[0] === 0) && (direction[1] === 1)) {\n      obstructions.forEach(barrier => {\n        if ((this.sides.bottom === barrier.sides.top) && (\n          (this.sides.left >= barrier.sides.left &&\n          this.sides.left <= barrier.sides.right) ||\n          (this.sides.right >= barrier.sides.left &&\n          this.sides.right <= barrier.sides.right) ||\n          (this.pos[0] >= barrier.sides.left &&\n          this.pos[0] <= barrier.sides.right))) {\n            bool = false;\n          }\n      });\n    }\n\n    // left\n    if ((direction[0] === -1) && (direction[1] === 0)) {\n      obstructions.forEach(barrier => {\n        if ((this.sides.left === barrier.sides.right) && (\n          (this.sides.top >= barrier.sides.top &&\n          this.sides.top <= barrier.sides.bottom) ||\n          (this.sides.bottom >= barrier.sides.top &&\n          this.sides.bottom <= barrier.sides.bottom) ||\n          (this.pos[1] >= barrier.sides.top &&\n          this.pos[1] <= barrier.sides.bottom))) {\n            bool = false;\n          }\n      });\n    }\n\n    // right\n    if ((direction[0] === 1) && (direction[1] === 0)) {\n      obstructions.forEach(barrier => {\n        if ((this.sides.right === barrier.sides.left) && (\n          (this.sides.top >= barrier.sides.top &&\n          this.sides.top <= barrier.sides.bottom) ||\n          (this.sides.bottom >= barrier.sides.top &&\n          this.sides.bottom <= barrier.sides.bottom) ||\n          (this.pos[1] >= barrier.sides.top &&\n          this.pos[1] <= barrier.sides.bottom))) {\n            bool = false;\n          }\n      });\n    }\n\n    return bool;\n  }\n\n  move(direction) {\n    if (!this.canMove(direction)) {\n      direction = [0, 0];\n      if (this.game.enemies.includes(this)) {\n        this.moveDirection = this.getNewDirection();\n        return;\n      }\n    }\n\n    direction = [(direction[0] * this.speed), (direction[1] * this.speed)];\n\n    this.pos = [(this.pos[0] + direction[0]), (this.pos[1] + direction[1])];\n    this.sides = this.getSides();\n  }\n\n  swivelCannon(mousePos) {\n    let dX = this.pos[0] - mousePos[0];\n    let dY = mousePos[1] - this.pos[1];\n    let magic = Math.atan2(dX, dY) + (Math.PI / 2);\n\n    this.aimX = this.pos[0] + (35 * Math.cos(magic));\n    this.aimY = this.pos[1] + (35 * Math.sin(magic));\n\n    /// borrowed from Bullet class\n\n    let slope = [(this.aimX - this.pos[0]),\n                (this.aimY - this.pos[1])];\n\n    if (Math.abs(slope[0]) >= Math.abs(slope[1])) {\n      slope = [(slope[0] / Math.abs(slope[0])),\n              (slope[1] / Math.abs(slope[0]))];\n    } else {\n      slope = [(slope[0] / Math.abs(slope[1])),\n              (slope[1] / Math.abs(slope[1]))];\n    }\n\n    this.cannonSlope = slope;\n  }\n\n  fire() {\n    // console.log(this.game.tanks);\n    // if (!this.game.outcome) {\n      if (this.game.tanks.includes(this) && this.bullets < 5) {\n        console.log(this.color, 'firing');\n        this.bullets = this.bullets + 1;\n        const bullet = new Bullet({\n          game: this.game,\n          owner: this,\n          tankPos: this.pos,\n          slope: this.cannonSlope\n        });\n        this.game.addBullet(bullet);\n      }\n    // }\n  }\n\n  draw(ctx) {\n    // tank body\n    ctx.fillStyle = this.color;\n    ctx.fillRect(\n      (this.pos[0] - (this.width / 2)),\n      (this.pos[1] - (this.width / 2)),\n      this.width,\n      this.width);\n\n    // tank center\n    ctx.fillStyle = 'white';\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], 5, 0, (2 * Math.PI), false);\n    ctx.fill();\n\n    // tank cannon\n    ctx.beginPath();\n    ctx.moveTo(this.pos[0], this.pos[1]);\n    ctx.lineTo(this.aimX, this.aimY);\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }\n\n}\n\nmodule.exports = Tank;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tank.js\n// module id = 0\n// module chunks = 0","const Explosion = require('./explosion');\n\nclass Bullet {\n  constructor(props) {\n    this.game = props.game;\n    this.owner = props.owner;\n    this.pos = props.tankPos;\n    this.slope = props.slope;\n    this.targets = this.owner.idEnemies();\n    this.speed = 5;\n    this.radius = 5;\n    this.color = 'white';\n    this.explosionTimeout = 300;\n    console.log('hello', this.owner.color, this.owner.bullets);\n  }\n\n  move(slope) {\n    slope = [(slope[0] * this.speed), (slope[1] * this.speed)];\n    this.pos = [(this.pos[0] + slope[0]), (this.pos[1] + slope[1])];\n\n    let otherBullets = this.game.bullets.filter(bullet => (bullet !== this));\n    if (this.hasCollided([].concat(this.targets, this.game.barriers, otherBullets))) {\n      this.explode();\n    }\n  }\n\n  hasCollided(objects) {\n    let bool;\n\n\n    objects.forEach(object => {\n      let objectDimensions;\n\n      if (object instanceof Bullet || object instanceof Explosion) {\n        objectDimensions = {\n          top: (object.pos[1] - object.radius),\n          right: (object.pos[0] + object.radius),\n          bottom: (object.pos[1] + object.radius),\n          left: (object.pos[0] - object.radius)\n        };\n      } else {\n        objectDimensions = {\n          top: object.sides.top,\n          right: object.sides.right,\n          bottom: object.sides.bottom,\n          left: object.sides.left\n        };\n      }\n\n      if ((\n        (this.pos[0] + this.radius) >= objectDimensions.left &&\n        (this.pos[0] - this.radius) <= objectDimensions.right\n      ) && (\n        (this.pos[1] + this.radius) >= objectDimensions.top &&\n        (this.pos[1] - this.radius) <= objectDimensions.bottom\n      )) {\n        bool = true;\n        this.hitsMovingObject(object);\n        // return;\n      }\n    });\n\n    return bool;\n  }\n\n  hitsMovingObject(object) {\n    if (object instanceof Bullet) {\n      object.explode();\n    }\n\n    if (this.targets.includes(object)) {\n      console.log('hits ', object);\n      this.game.remove(object);\n      // this is the bug line\n      // this.pos = object.pos;\n      this.explosionTimeout = 750;\n\n      console.log(`${this.owner.color} ${this.owner.bullets} hits ${object.color}`);\n      if (object !== this.game.playerOne) {\n        console.log(`${object.color}.pos FROM ${object.pos}`);\n        object.pos = undefined;\n        console.log(`${object.color}.pos TO ${object.pos}`);\n        // object.sides = undefined;\n\n        // setTimeout(() => { object.pos = undefined; }, 500);\n      }\n    }\n  }\n\n  explode() {\n    this.owner.bullets = this.owner.bullets - 1;\n    this.game.remove(this);\n\n    const explosion = new Explosion(this.pos);\n    this.game.explosions.push(explosion);\n    setTimeout(() => { this.game.remove(explosion); }, this.explosionTimeout);\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, (2 * Math.PI), false);\n    ctx.fill();\n  }\n\n}\n\nmodule.exports = Bullet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bullet.js\n// module id = 1\n// module chunks = 0","class Explosion {\n\n  constructor(pos) {\n    this.pos = pos;\n    this.radius = 0;\n    this.radiusTwo = 0;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, (2 * Math.PI), false);\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radiusTwo, 0, (2 * Math.PI), false);\n    ctx.strokeStyle = 'orange';\n    ctx.lineWidth = 3;\n    ctx.stroke();\n\n    this.radius = this.radius + 1;\n    this.radiusTwo = this.radiusTwo + .5;\n  }\n\n}\n\nmodule.exports = Explosion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/explosion.js\n// module id = 2\n// module chunks = 0","const Game = require('./game.js');\nconst GameView = require('./game_view');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById('game-map');\n  const context = canvas.getContext('2d');\n\n  // console.log('entry');\n  // const start = () => {\n  //   console.log('start');\n    const game = new Game({dimensions: [canvas.width, canvas.height]});\n    new GameView(game, context, canvas).start();\n  // };\n  // const gameView = new GameView(game, context, canvas);\n\n  // const button = document.createElement('button');\n  // button.onclick = gameView.start;\n  // const div = document.getElementById('game-info');\n  // div.innerHTML = '<button onclick=\"start\">NewGame</button>';\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Tanks.js\n// module id = 3\n// module chunks = 0","const Tank = require('./tank');\nconst PlayerOne = require('./player_one');\nconst EnemyTank = require('./enemy_tank');\nconst Barrier = require('./barrier');\nconst Bullet = require('./bullet');\nconst Explosion = require('./explosion');\n\nclass Game {\n  constructor(canvas) {\n    this.dimensions = canvas.dimensions;\n    this.tanks = [];\n    this.enemies = [];\n    this.bullets = [];\n    this.barriers = [];\n    this.coverOnly = [];\n    this.explosions = [];\n    this.outcome;\n    // console.log('newgame');\n  }\n\n  addTank() {\n    const tank = new PlayerOne(this);\n    this.tanks.push(tank);\n    this.playerOne = tank;\n    return tank;\n  }\n\n  addEnemies() {\n    const tank = new EnemyTank(this);\n    this.tanks.push(tank);\n    this.enemies.push(tank);\n    return tank;\n  }\n\n  addBullet(bullet) {\n    this.bullets.push(bullet);\n    return bullet;\n  }\n\n  addBarriers() {\n    const boundaries = [\n      new Barrier(0, 0, 800, 10),\n      new Barrier(0, 590, 800, 10),\n      new Barrier(0, 10, 10, 580),\n      new Barrier(790, 10, 10, 580)\n    ];\n\n    const startingCover = [\n      new Barrier(100, 250, 20, 100),\n      new Barrier(680, 250, 20, 100)\n    ];\n\n    const levelOne = [\n      new Barrier(390, 100, 20, 150),\n      new Barrier(390, 350, 20, 150)\n    ];\n\n    this.coverOnly = [].concat(startingCover, levelOne);\n    this.barriers = [].concat(boundaries, startingCover, levelOne);\n    return this.barriers;\n  }\n\n  remove(object) {\n    if (object instanceof Barrier) {\n      return;\n    } else if (object instanceof Tank) {\n      if (!this.tanks.includes(this.playerOne)) {\n        this.tanks.forEach(enemy => (enemy.seesPlayerOne = false ));\n      }\n      this.tanks = this.tanks.filter(tank => (\n        tank !== object\n      ));\n      // object = undefined;\n      // this.bullets.forEach(bullet => {\n      //   if (bullet.owner === object) {\n      //     bullet.explode();\n      //   }\n      // });\n      // object.pos = undefined;\n\n      // this.gameOver();\n      setTimeout(() => { this.gameOver(); }, 1000);\n\n    } else if (object instanceof Bullet) {\n      console.log('goodbye', object.owner.color, object.owner.bullets);\n      this.bullets = this.bullets.filter(bullet => (\n        object !== bullet\n      ));\n      object = undefined;\n    } else if (object instanceof Explosion) {\n      this.explosions = this.explosions.filter(explosion => (\n        object !== explosion\n      ));\n      object = undefined;\n    }\n  }\n\n  gameOver() {\n    console.log('inside gameOver');\n    // if (this.tanks.length === 1) {\n      if (this.tanks.length === 0) {\n        this.outcome = 'Draw!';\n      } else if (this.tanks.length === 1 && this.tanks[0] instanceof PlayerOne) {\n        this.outcome = 'You win!';\n        console.log('You win!');\n      } else if (!this.tanks.includes(this.playerOne)) {\n        this.outcome = 'You lose!';\n        console.log('You lose!');\n      }\n\n      // if (this.tanks.length === 1 && this.tanks[0] instanceof PlayerOne) {\n      //   this.outcome = 'You win!';\n      //   console.log('You win!');\n      // } else if (!this.tanks.includes(this.playerOne)) {\n      //   this.outcome = 'You lose!';\n      //   console.log('You lose!');\n      // } else if (this.tanks.length === 0) {\n      //   this.outcome = 'Draw!';\n      // }\n    // }\n  }\n\n  getMovingObjects() {\n    return [].concat(this.tanks, this.bullets);\n  }\n\n  moveObjects() {\n    this.getMovingObjects().forEach(object => {\n        let props;\n        if (object instanceof PlayerOne) {\n            // console.log('playerOne');\n            props = object.moveDirection;\n        } else if (object instanceof EnemyTank) {\n          // console.log('EnemyTank');\n            // RISKY\n            props = object.moveDirection;\n            // console.log(props);\n        } else {\n            props = object.slope;\n        }\n        object.move(props);\n    });\n  }\n\n  drawEverything(ctx, mouseObject) {\n    // render the canvas\n    ctx.clearRect(0, 0, this.dimensions[0], this.dimensions[1]);\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, this.dimensions[0], this.dimensions[1]);\n\n    // render barriers and boundaries\n    this.barriers.forEach(barrier => {\n      barrier.draw(ctx);\n    });\n\n    // render moving objects\n    this.getMovingObjects().forEach(object => {\n      object.draw(ctx);\n\n      if (object instanceof Tank) {\n        let props;\n        if (object instanceof PlayerOne) {\n          props = mouseObject.mousePos;\n        } else {\n          props = this.playerOne.pos;\n        }\n        object.swivelCannon(props);\n      }\n    });\n\n    // this.playerOne.swivelCannon(mouseObject.mousePos);\n    // this.enemy.swivelCannon(this.playerOne.pos);\n\n    this.explosions.forEach(explosion => {\n      explosion.draw(ctx);\n    });\n\n\n\n    // render the player's aim\n    ctx.beginPath();\n    ctx.moveTo(this.playerOne.pos[0], this.playerOne.pos[1]);\n    ctx.lineTo(mouseObject.mousePos[0], mouseObject.mousePos[1]);\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = .5;\n    ctx.stroke();\n    //\n    // ctx.beginPath();\n    // ctx.moveTo(this.enemy.pos[0], this.enemy.pos[1]);\n    // ctx.lineTo(this.playerOne.pos[0], this.playerOne.pos[1]);\n    // ctx.strokeStyle = 'yellow';\n    // ctx.lineWidth = 1;\n    // ctx.stroke();\n\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0","const Tank = require('./tank');\n\nconst DEFAULTS = {\n  color: 'blue',\n  pos: [45, 300]\n};\n\nclass PlayerOne extends Tank {\n  constructor(game) {\n    super(game);\n\n    this.pos = DEFAULTS.pos;\n    this.color = DEFAULTS.color;\n    this.aimX = this.pos[0] + 35;\n    this.aimY = this.pos[1];\n    this.sides = this.getSides();\n    // this.enemies = this.idEnemies();\n  }\n\n}\n\nmodule.exports = PlayerOne;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player_one.js\n// module id = 5\n// module chunks = 0","const Tank = require('./tank');\n\nclass EnemyTank extends Tank {\n  constructor(game) {\n    super(game);\n\n    this.pos = EnemyTank.DEFAULTS.pos.pop();\n    this.color = EnemyTank.DEFAULTS.color.pop();\n    this.aimX = (this.pos[0] - 35);\n    this.aimY = this.pos[1];\n    this.sides = this.getSides();\n    this.moveDirection = this.getNewDirection();\n\n    this.seesPlayerOne;\n    this.lineOfFirePoint = [this.aimX, this.aimY];\n    this.pixelsAwayFromCannon = 0;\n\n    // sets this.seesPlayerOne\n    setInterval(() => { this.cannonAI(); }, 1);\n\n    // try to fire\n    setInterval(() => { if (this.seesPlayerOne) {  this.fire();  }  }, 750);\n\n    // new moveDirection every five seconds\n    setInterval(() => {  this.moveDirection = this.getNewDirection();  }, 3000);\n\n  }\n\n  // drawLine(ctx) {\n  //   ctx.strokeStyle = 'yellow';\n  //   ctx.beginPath();\n  //   ctx.arc(this.lineOfFirePoint[0], this.lineOfFirePoint[1], 5, 0, (2 * Math.PI), false);\n  //   ctx.stroke();\n  // }\n\n  getNewDirection() {\n    return EnemyTank.MOVES[(Object.keys(EnemyTank.MOVES)[Math.floor(Math.random() * 4)])];\n  }\n\n  cannonAI() {\n    let objects = [].concat(this.game.barriers, this.game.tanks);\n\n    objects.forEach(object => {\n      if ((this.lineOfFirePoint[0] >= object.sides.left &&\n          this.lineOfFirePoint[0] <= object.sides.right) &&\n          (this.lineOfFirePoint[1] >= object.sides.top &&\n          this.lineOfFirePoint[1] <= object.sides.bottom)) {\n          if (object === this.game.playerOne) {\n            this.seesPlayerOne = true;\n          } else {\n            this.seesPlayerOne = false;\n          }\n        this.lineOfFirePoint = [this.aimX, this.aimY];\n        this.pixelsAwayFromCannon = 0;\n      }\n    });\n\n    this.lineOfFirePoint = [\n      (this.aimX + (this.cannonSlope[0] * this.pixelsAwayFromCannon)),\n      (this.aimY + (this.cannonSlope[1] * this.pixelsAwayFromCannon))\n    ];\n\n    this.pixelsAwayFromCannon = this.pixelsAwayFromCannon + 10;\n  }\n\n  // attackAI() {\n  //   if (this.seesPlayerOne) {\n  //     console.log('inside attackAI');\n  //     this.fire();\n  //     setTimeout(this.attackAI, 3000);\n  //   }\n  // }\n\n}\n\nmodule.exports = EnemyTank;\n\nEnemyTank.DEFAULTS = {\n  color: ['red', 'purple'],\n  pos: [[755, 300], [600, 300]]\n};\n\nEnemyTank.MOVES = {\n  up: [0, -1],\n  left: [-1, 0],\n  right: [0, 1],\n  down: [1, 0]\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy_tank.js\n// module id = 6\n// module chunks = 0","class Barrier {\n\n  constructor(xPos, yPos, width, height) {\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.width = width;\n    this.height = height;\n\n    this.sides = {\n      top: this.yPos,\n      right: (this.xPos + this.width),\n      bottom: (this.yPos + this.height),\n      left: this.xPos\n    };\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = 'gray';\n    ctx.fillRect(this.xPos, this.yPos, this.width, this.height);\n  }\n\n}\n\nmodule.exports = Barrier;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/barrier.js\n// module id = 7\n// module chunks = 0","class GameView {\n\n  constructor(game, context, canvas) {\n    this.game = game;\n    this.context = context;\n    this.canvas = canvas;\n    this.mousePos = [400, 300];\n    this.tank = this.game.addTank();\n    this.enemy = this.game.addEnemies();\n    this.enemy = this.game.addEnemies();\n\n    this.game.addBarriers();\n\n    this.setMousePosition = this.setMousePosition.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    // console.log('new gameView');\n  }\n\n  listenForMouse() {\n    this.canvas.addEventListener('mousemove', this.setMousePosition);\n  }\n\n  setMousePosition(event) {\n    this.mousePos = [(event.clientX - 350), (event.clientY - 50)];\n  }\n\n  listenForClick() {\n    this.canvas.addEventListener('click', this.handleClick);\n  }\n\n  handleClick() {\n    this.tank.fire(this.mousePos);\n  }\n\n  bindKeys() {\n    Object.keys(GameView.MOVES).forEach((k) => {\n      document.addEventListener('keydown', event => {\n        this.tank.moveDirection = GameView.MOVES[event.key];\n      });\n    });\n\n    document.addEventListener('keyup', event => {\n      this.tank.moveDirection = [0, 0];\n    });\n  }\n\n  displayOutcome() {\n    document.getElementById('outcome').innerHTML = `${this.game.outcome}`;\n    // document.getElementById('new-game-button').innerHTML = 'New Game';\n    // this.game = new Game({dimensions: [canvas.width, canvas.height]});\n  }\n\n  start() {\n    this.bindKeys();\n    this.listenForMouse();\n    this.listenForClick();\n\n    this.animate();\n  }\n\n  animate() {\n    this.game.moveObjects();\n    this.game.drawEverything(this.context, {mousePos: this.mousePos});\n    // this.enemy.drawLine(this.context);\n\n    if (!this.game.outcome) {\n      requestAnimationFrame(this.animate.bind(this));\n    } else {\n      this.displayOutcome();\n    }\n  }\n\n}\n\nGameView.MOVES = {\n  'w': [0, -1],\n  'a': [-1, 0],\n  's': [0, 1],\n  'd': [1, 0]\n};\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}